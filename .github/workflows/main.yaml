# Set up self hosted runners by using following
# https://digit-discuss.atlassian.net/wiki/spaces/DD/pages/1998848002/Integration+Testing+with+GitHub+Actions


# Name of your workflow.
name: generating apk

# Trigger the workflow on push or pull requests.
on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs.
jobs:
  # id of job, a string that is unique to the "jobs" node above.
  build:
    # The type of machine to run the job on.
    runs-on: ubuntu-20.04,
    # Creates a build matrix for your jobs. You can define different
    # variations of an environment to run each job in.
#    strategy:
#      # A set of different configurations of the virtual
#      # environment.
#      matrix:
#        api-level: [ 30 ]
#        target: [ default ]
    # Contains a sequence of tasks.
    steps:
      # The branch or tag ref that triggered the workflow will be
      # checked out.
      - uses: actions/checkout@v3
      # Sets up a java environment.
      - uses: actions/setup-java@v3
        with:
          java-version: '11.0.12'
      # Sets up a Flutter environment.
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.1'
          channel: 'stable'
#      - name: "Run Flutter Driver tests"
        #Operation for installing, configuring and running Android emulator
        # https://github.com/marketplace/actions/android-emulator-runner
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          target: ${{ matrix.target }}
#          arch: x86_64
#          profile: Nexus 6
#          script: "cd ./frontend/mgramseva && flutter drive  --dart-define=BASE_PATH=https://mgramseva-qa.egov.org.in/
#          --driver=test_driver/integration_test_driver.dart   --target=integration_test/login_test.dart"
      # checking out to respective directory and building the apk
      - run: flutter pub get
      - run: flutter build apk --no-tree-shake-icons
      # uploading the release build to artifact
      - uses: actions/upload-artifact@v3
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk