// Mocks generated by Mockito 5.4.4 from annotations
// in sample_latest/test/widget_testing/school/create_edit_school_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sample_latest/models/school/school_details_model.dart' as _i2;
import 'package:sample_latest/models/school/school_model.dart' as _i3;
import 'package:sample_latest/models/school/student_model.dart' as _i4;
import 'package:sample_latest/services/repository/school_repository.dart'
    as _i5;
import 'package:sample_latest/services/utils/service_enums_typedef.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSchoolDetailsModel_0 extends _i1.SmartFake
    implements _i2.SchoolDetailsModel {
  _FakeSchoolDetailsModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSchoolModel_1 extends _i1.SmartFake implements _i3.SchoolModel {
  _FakeSchoolModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStudentModel_2 extends _i1.SmartFake implements _i4.StudentModel {
  _FakeStudentModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SchoolRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSchoolRepository extends _i1.Mock implements _i5.SchoolRepository {
  MockSchoolRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i3.SchoolModel>> fetchSchools() => (super.noSuchMethod(
        Invocation.method(
          #fetchSchools,
          [],
        ),
        returnValue:
            _i6.Future<List<_i3.SchoolModel>>.value(<_i3.SchoolModel>[]),
      ) as _i6.Future<List<_i3.SchoolModel>>);

  @override
  _i6.Future<_i4.StudentModel?> fetchStudent(
    String? studentId,
    String? schoolId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchStudent,
          [
            studentId,
            schoolId,
          ],
        ),
        returnValue: _i6.Future<_i4.StudentModel?>.value(),
      ) as _i6.Future<_i4.StudentModel?>);

  @override
  _i6.Future<_i2.SchoolDetailsModel?> fetchSchoolDetails(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchSchoolDetails,
          [id],
        ),
        returnValue: _i6.Future<_i2.SchoolDetailsModel?>.value(),
      ) as _i6.Future<_i2.SchoolDetailsModel?>);

  @override
  _i6.Future<List<_i4.StudentModel>> fetchStudents(String? schoolId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchStudents,
          [schoolId],
        ),
        returnValue:
            _i6.Future<List<_i4.StudentModel>>.value(<_i4.StudentModel>[]),
      ) as _i6.Future<List<_i4.StudentModel>>);

  @override
  _i6.Future<_i2.SchoolDetailsModel> addOrEditSchoolDetails(
          _i2.SchoolDetailsModel? schoolDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #addOrEditSchoolDetails,
          [schoolDetails],
        ),
        returnValue:
            _i6.Future<_i2.SchoolDetailsModel>.value(_FakeSchoolDetailsModel_0(
          this,
          Invocation.method(
            #addOrEditSchoolDetails,
            [schoolDetails],
          ),
        )),
      ) as _i6.Future<_i2.SchoolDetailsModel>);

  @override
  _i6.Future<_i3.SchoolModel> createOrEditSchool(_i3.SchoolModel? school) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrEditSchool,
          [school],
        ),
        returnValue: _i6.Future<_i3.SchoolModel>.value(_FakeSchoolModel_1(
          this,
          Invocation.method(
            #createOrEditSchool,
            [school],
          ),
        )),
      ) as _i6.Future<_i3.SchoolModel>);

  @override
  _i6.Future<_i4.StudentModel> createOrEditStudent(
    String? schoolId,
    _i4.StudentModel? student,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrEditStudent,
          [
            schoolId,
            student,
          ],
        ),
        returnValue: _i6.Future<_i4.StudentModel>.value(_FakeStudentModel_2(
          this,
          Invocation.method(
            #createOrEditStudent,
            [
              schoolId,
              student,
            ],
          ),
        )),
      ) as _i6.Future<_i4.StudentModel>);

  @override
  _i6.Future<bool> deleteSchool(String? schoolId) => (super.noSuchMethod(
        Invocation.method(
          #deleteSchool,
          [schoolId],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> deleteStudent(
    String? studentId,
    String? schoolId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteStudent,
          [
            studentId,
            schoolId,
          ],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<dynamic> makeRequest<T>({
    required String? url,
    String? baseUrl,
    dynamic body,
    String? contentType,
    Map<String, dynamic>? queryParameters,
    Map<String, String>? headers,
    _i7.RequestType? method = _i7.RequestType.get,
    Map<String, dynamic>? extras = const {},
    bool? isOfflineApi = true,
    bool? isFromQueue = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #makeRequest,
          [],
          {
            #url: url,
            #baseUrl: baseUrl,
            #body: body,
            #contentType: contentType,
            #queryParameters: queryParameters,
            #headers: headers,
            #method: method,
            #extras: extras,
            #isOfflineApi: isOfflineApi,
            #isFromQueue: isFromQueue,
          },
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
}
